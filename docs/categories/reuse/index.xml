<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reuse on Jos de Jong</title>
    <link>https://josdejong.com/categories/reuse/</link>
    <description>Recent content in reuse on Jos de Jong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2013-2020 &lt;a href=&#39;https://josdejong.com&#39;&gt;Jos de Jong&lt;/a&gt; &amp;bull; powered by &lt;a href=&#39;https://gohugo.io/&#39;&gt;Hugo&lt;/a&gt; &amp;bull; background from &lt;a href=&#39;https://www.technobuffalo.com/sites/technobuffalo.com/files/wp/2010/11/tb-wallpaper-blue-2560x1440.jpg&#39;&gt;technobuffalo&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 06 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josdejong.com/categories/reuse/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reusable software? Just don&#39;t write generic code</title>
      <link>https://josdejong.com/blog/2015/01/06/code-reuse/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://josdejong.com/blog/2015/01/06/code-reuse/</guid>
      <description>It may be the holy grail of programming: writing reusable code. Not getting stuck by inventing the wheel again and again, but moving forward and building on top of what has been done. Looking at what we do today, we still haven&amp;rsquo;t really figured this out.
So you are writing a software library. You had a great idea for a simple, broadly applicable solution. You have cooked up a nice API and are happy with the result.</description>
    </item>
    
  </channel>
</rss>